data Bit is Zero | One end
data W8 is W8 Bit Bit Bit Bit Bit Bit Bit Bit end
data Tuple2 a b is Tuple2 a b end
data Unit is Unit end

vhdl plus :: W8 -> W8 -> W8 is plus

sig :: <ReT Bit W8 (StT W8 (StT W8 I))><()>
is
     bind r0 <- lift get
  in bind i  <- signal r0
  in case i of
     { Zero -> sig
     ; One  -> incr
     }
end

incr :: <ReT Bit W8 (StT W8 (StT W8 I))><()>
is
    bind r0  <- lift get
 in bind r1  <- lift (lift get)
 in bind zzz <- lift (put r1)
 in bind zzz <- lift (lift (put (plus r0 r1)))
 in             sig
end

start :: <ReT Bit W8 I><(((),W8),W8)>
is
  extrude (extrude sig (W8 Zero Zero Zero Zero Zero Zero Zero Zero)) (W8 Zero Zero Zero Zero Zero Zero Zero One)
end
