def main
  <(((React Bit) Int) a)>
is
  ((fib<((Arr Int) ((Arr Int) (((React Bit) Int) a)))> 0<Int>) 1<Int>)
end

def fib
  <((Arr Int) ((Arr Int) (((React Bit) Int) a)))>
is
  { \ n ->
    { \ m ->
      ((bindRe<((Arr (((React Bit) Int) Bit))
                    ((Arr (((React Bit) Int) Bit))
                          (((React Bit) Int) a)))>
         (signal<((Arr Int) (((React Bit) Int) Bit))>
          n<Int>))
         { \ sw -> case sw<Bit> of
                     <1> ((fib<((Arr Int) ((Arr Int) (((React Bit) Int) a)))> n<Int>) m<Int>)
                     <0> ((fib<((Arr Int) ((Arr Int) (((React Bit) Int) a)))> m<Int>) ((plus<((Arr Int) ((Arr Int) Int))> n<Int>) m<Int>))
                   end
         })
    }
  }
end
